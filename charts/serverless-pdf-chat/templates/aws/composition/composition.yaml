spec:
  compositeTypeRef:
    apiVersion: serverlesspdfchat.shortrib.io/v1alpha1
    kind: CognitoAuth
  resources:
    # User Pool
    - name: userpool
      base:
        apiVersion: cognitoidp.aws.upbound.io/v1beta1
        kind: UserPool
        metadata:
          labels:
            {{- include "serverless-pdf-chat.labels" . | nindent 12 }}
        spec:
          forProvider:
            region: {{ .Values.aws.region }}
            name: {{ include "serverless-pdf-chat.fullname" . }}-user-pool
            autoVerifiedAttributes:
              {{- range .Values.aws.cognito.userPool.autoVerifiedAttributes }}
              - {{ . }}
              {{- end }}
            usernameAttributes:
              {{- range .Values.aws.cognito.userPool.usernameAttributes }}
              - {{ . }}
              {{- end }}
            adminCreateUserConfig:
              - allowAdminCreateUserOnly: {{ .Values.aws.cognito.userPool.adminCreateUserConfig.allowAdminCreateUserOnly }}
            passwordPolicy:
              - minimumLength: {{ .Values.aws.cognito.userPool.passwordPolicy.minimumLength }}
                requireLowercase: {{ .Values.aws.cognito.userPool.passwordPolicy.requireLowercase }}
                requireNumbers: {{ .Values.aws.cognito.userPool.passwordPolicy.requireNumbers }}
                requireSymbols: {{ .Values.aws.cognito.userPool.passwordPolicy.requireSymbols }}
                requireUppercase: {{ .Values.aws.cognito.userPool.passwordPolicy.requireUppercase }}
            tags:
              {{- include "serverless-pdf-chat.tags" . | nindent 14 }}
          providerConfigRef:
            name: {{ .Values.aws.providerConfigName }}
      patches:
        # Patch the User Pool name from the composite resource
        - fromFieldPath: "spec.userPoolName"
          toFieldPath: "spec.forProvider.name"
        # Patch the region from the composite resource
        - fromFieldPath: "spec.region"
          toFieldPath: "spec.forProvider.region"
        # Patch tags from the composite resource
        - fromFieldPath: "spec.tags"
          toFieldPath: "spec.forProvider.tags"
          policy:
            mergeOptions:
              keepMapValues: true
        # Patch the User Pool ID to the composite resource status
        - fromFieldPath: "status.atProvider.id"
          toFieldPath: "status.userPoolId"
          
    # User Pool Client
    - name: userpoolclient
      base:
        apiVersion: cognitoidp.aws.upbound.io/v1beta1
        kind: UserPoolClient
        metadata:
          labels:
            {{- include "serverless-pdf-chat.labels" . | nindent 12 }}
        spec:
          forProvider:
            region: {{ .Values.aws.region }}
            name: {{ include "serverless-pdf-chat.fullname" . }}-user-pool-client
            generateSecret: {{ .Values.aws.cognito.userPoolClient.generateSecret }}
          providerConfigRef:
            name: {{ .Values.aws.providerConfigName }}
      patches:
        # Patch the User Pool Client name from the composite resource
        - fromFieldPath: "spec.userPoolClientName"
          toFieldPath: "spec.forProvider.name"
        # Patch the region from the composite resource
        - fromFieldPath: "spec.region"
          toFieldPath: "spec.forProvider.region"
        # Reference the User Pool ID from the User Pool resource
        - type: FromCompositeFieldPath
          fromFieldPath: "status.userPoolId"
          toFieldPath: "spec.forProvider.userPoolId"
        # Patch the User Pool Client ID to the composite resource status
        - fromFieldPath: "status.atProvider.id"
          toFieldPath: "status.userPoolClientId"
          
    # Authorizer
    - name: authorizer
      base:
        apiVersion: apigatewayv2.aws.upbound.io/v1beta1
        kind: Authorizer
        metadata:
          labels:
            {{- include "serverless-pdf-chat.labels" . | nindent 12 }}
            authorizer: {{ include "serverless-pdf-chat.fullname" . }}-cognito-authorizer
        spec:
          forProvider:
            region: {{ .Values.aws.region }}
            name: CognitoAuthorizer
            authorizerType: JWT
            identitySources:
              - "$request.header.Authorization"
            jwtConfiguration:
              - audience: []
                issuer: ""
          providerConfigRef:
            name: {{ .Values.aws.providerConfigName }}
      patches:
        # Patch the Authorizer name from the composite resource
        - fromFieldPath: "spec.authorizerName"
          toFieldPath: "spec.forProvider.name"
        # Patch the region from the composite resource
        - fromFieldPath: "spec.region"
          toFieldPath: "spec.forProvider.region"
        # Reference the API ID selector from the composite resource
        - fromFieldPath: "spec.apiIdSelector"
          toFieldPath: "spec.forProvider.apiIdSelector"
        # Reference the User Pool Client ID for the audience
        - type: FromCompositeFieldPath
          fromFieldPath: "status.userPoolClientId"
          toFieldPath: "spec.forProvider.jwtConfiguration[0].audience[0]"
        # Construct the issuer URL using the User Pool ID
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: "spec.region"
              - fromFieldPath: "status.userPoolId"
            strategy: string
            string:
              fmt: "https://cognito-idp.%s.amazonaws.com/%s"
          toFieldPath: "spec.forProvider.jwtConfiguration[0].issuer"
        # Patch the Authorizer ID to the composite resource status
        - fromFieldPath: "status.atProvider.id"
          toFieldPath: "status.authorizerId"
