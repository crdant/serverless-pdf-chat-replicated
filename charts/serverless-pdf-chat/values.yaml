# Default values for serverless-pdf-chat
# This is a YAML-formatted file.

global:
  namePrefix: "pdf-chat"
  environment: "dev"

images:
  registry: "ghcr.io"
  repository: "your-org/serverless-pdf-chat"
  tag: "latest"
  pullPolicy: "IfNotPresent"
  lambda:
    uploadTrigger:
      repository: "upload-trigger"
      tag: null  # Will use global tag if null
    generatePresignedUrl:
      repository: "generate-presigned-url"
      tag: null
    generateEmbeddings:
      repository: "generate-embeddings"
      tag: null
    getDocument:
      repository: "get-document"
      tag: null
    getAllDocuments:
      repository: "get-all-documents"
      tag: null
    deleteDocument:
      repository: "delete-document"
      tag: null
    addConversation:
      repository: "add-conversation"
      tag: null
    generateResponse:
      repository: "generate-response"
      tag: null

application:
  config:
    region: "us-west-2"
    modelId: "anthropic.claude-3-sonnet-20240229-v1:0"
    embeddingModelId: "amazon.titan-embed-text-v2:0"

aws:
  region: "us-west-2"
  accountId: "123456789012"  # This should be replaced with the actual AWS account ID
  providerConfigName: "default"
  s3:
    corsEnabled: true
    versioning: true
    lifecycleRules:
      - enabled: true
        expiration: 90
    publicAccessBlockConfiguration:
      blockPublicAcls: true
      blockPublicPolicy: true
      ignorePublicAcls: true
      restrictPublicBuckets: true
        
  dynamodb:
    billingMode: "PAY_PER_REQUEST"
    documentTable:
      name: null
    memoryTable:
      name: null
        
  sqs:
    embeddingQueue:
      name: null
      visibilityTimeout: 180
      messageRetentionPeriod: 3600
  
  cognito:
    userPool:
      name: null
      autoVerifiedAttributes: ["email"]
      usernameAttributes: ["email"]
      adminCreateUserConfig:
        allowAdminCreateUserOnly: true
      passwordPolicy:
        minimumLength: 8
        requireLowercase: true
        requireNumbers: true
        requireSymbols: true
        requireUppercase: true
    userPoolClient:
      name: null
      generateSecret: false
  
  iam:
    roles:
      lambdaRole:
        name: null  # Optional, will use a generated name if not provided
        policies:
          name: null  # Optional, will use a default name if not provided
  
  lambda:
    runtime: "python3.11"
    handler: "lambda_function.lambda_handler"
    timeout: 30
    memorySize: 256
    functions:
      uploadTrigger:
        name: null
        description: "Handles S3 uploads and triggers document processing"
        timeout: 30
        memorySize: 256
        codePath: "./lambda/upload_trigger"
        environment:
          - ADDITIONAL_ENV_VAR: "value"
      generatePresignedUrl:
        name: null
        description: "Generates presigned URLs for document uploads"
        timeout: 10
        memorySize: 128
        codePath: "./lambda/generate_presigned_url"
      generateEmbeddings:
        name: null
        description: "Processes documents and generates embeddings"
        timeout: 180
        memorySize: 1024
        codePath: "./lambda/generate_embeddings"
      getDocument:
        name: null
        description: "Retrieves document information"
        timeout: 10
        memorySize: 128
        codePath: "./lambda/get_document"
      getAllDocuments:
        name: null
        description: "Retrieves all user documents"
        timeout: 10
        memorySize: 128
        codePath: "./lambda/get_all_documents"
      deleteDocument:
        name: null
        description: "Deletes a document and its embeddings"
        timeout: 30
        memorySize: 256
        codePath: "./lambda/delete_document"
      addConversation:
        name: null
        description: "Adds a new conversation to memory"
        timeout: 10
        memorySize: 128
        codePath: "./lambda/add_conversation"
      generateResponse:
        name: null
        description: "Generates a response using the LLM"
        timeout: 60
        memorySize: 512
        codePath: "./lambda/generate_response"
        
tags:
  environment: "dev"
  application: "pdf-chat"
