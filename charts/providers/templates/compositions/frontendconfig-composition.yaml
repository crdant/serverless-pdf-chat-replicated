apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: frontendconfigs.serverlesspdfchat.shortrib.io
  labels:
    provider: aws
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "10"  # Run after XRD (weight 5)
spec:
  compositeTypeRef:
    apiVersion: serverlesspdfchat.shortrib.io/v1alpha1
    kind: FrontendConfig
  resources:
    - name: configmap
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha2
        kind: Object
        metadata:
          labels: {}
        spec:
          forProvider:
            manifest:
              apiVersion: v1
              kind: ConfigMap
              metadata:
                name: ""
                labels: {}
              data:
                region: ""
                apiEndpoint: "https://example.com/api"
                userPoolId: "us-west-2_example"
                userPoolClientId: "example-client-id"
          providerConfigRef:
            name: default
      patches:
        # Set the ConfigMap name from the spec
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.configMapName"
          toFieldPath: "spec.forProvider.manifest.metadata.name"
        
        # Set the region
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.region"
          toFieldPath: "spec.forProvider.manifest.data.region"
        
        # Patch the provider config name
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.providerConfigRef.name"
          toFieldPath: "spec.providerConfigRef.name"
          policy:
            fromFieldPath: Optional
        
        # Patch labels from the composite resource
        - type: FromCompositeFieldPath
          fromFieldPath: "metadata.labels"
          toFieldPath: "metadata.labels"
          policy:
            mergeOptions:
              keepMapValues: true
        
        # Patch labels to the ConfigMap
        - type: FromCompositeFieldPath
          fromFieldPath: "metadata.labels"
          toFieldPath: "spec.forProvider.manifest.metadata.labels"
          policy:
            mergeOptions:
              keepMapValues: true
        
        # Store the ConfigMap reference in status
        - type: ToCompositeFieldPath
          fromFieldPath: "spec.forProvider.manifest.metadata.name"
          toFieldPath: "status.configMapName"
